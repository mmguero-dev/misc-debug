---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: nginx-ldap
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "https"
    # nginx.ingress.kubernetes.io/preserve-trailing-slash: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
    # - host: server.k3s.internal
    - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-ldap-service
            port:
              number: 443

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ldap-service
  namespace: nginx-ldap
spec:
  ports:
    - port: 443
      protocol: TCP
  selector:
    app: nginx-ldap-app

---
apiVersion: v1
kind: Service
metadata:
  name: whoami-service
  namespace: nginx-ldap
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: nginx-ldap-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ldap-app
  namespace: nginx-ldap
spec:
  selector:
    matchLabels:
      app: nginx-ldap-app
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx-ldap-app
    spec:
      containers:
      - name: whoami-container
        image: docker.io/traefik/whoami:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 80
      - name: nginx-ldap-container
        image: ghcr.io/mmguero/nginx-ldap:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 443
        env:
          - name: PUID
            value: '1000'
          - name: PGID
            value: '1000'
          - name: NGINX_BASIC_AUTH
            value: 'true'
          - name: NGINX_LDAP_TLS_STUNNEL
            value: 'false'
          - name: NGINX_LDAP_TLS_STUNNEL_CHECK_HOST
            value: ''
          - name: NGINX_LDAP_TLS_STUNNEL_CHECK_IP
            value: ''
          - name: NGINX_LDAP_TLS_STUNNEL_VERIFY_LEVEL
            value: '2'
          - name: NGINX_SSL
            value: 'true'
          - name: CONFIG_MAP_DIR
            value: 'configmap'
        volumeMounts:
        - name: etc-nginx-volume
          mountPath: /etc/nginx/configmap
        - name: etc-nginx-catrust-volume
          mountPath: /etc/nginx/ca-trust/configmap
        - name: etc-nginx-certs-volume
          mountPath: /etc/nginx/certs/configmap
        - name: etc-nginx-certs-pem-volume
          mountPath: /etc/nginx/dhparam/configmap
      volumes:
      - name: etc-nginx-volume
        configMap:
          name: etc-nginx
      - name: etc-nginx-catrust-volume
        configMap:
          name: etc-nginx-catrust
      - name: etc-nginx-certs-volume
        configMap:
          name: etc-nginx-certs
      - name: etc-nginx-certs-pem-volume
        configMap:
          name: etc-nginx-certs-pem